{"version":3,"sources":["img/close.svg","img/search.svg","reducers/table.js","reducers/reducer.js","App.js","components/Table/TableRow.js","components/Loader/Loader.js","actions/serverConnections.js","components/Table/Table.js","actions/application.js","index.js"],"names":["module","exports","initialState","maxPages","curPage","selectedElementId","searchValue","loaderActive","formErrorInput","columnFilterState","id","firstName","lastName","email","phone","dataForm","bufDataObj","address","streetAddress","city","state","zip","description","data","filteredData","selectedElement","combineReducers","routing","routerReducer","table","action","type","payload","item","Object","assign","Math","floor","length","columnName","initalColumnState","keys","map","objectKey","name","value","unshift","App","to","className","Component","connect","ownProps","rowIndex","index","selectedId","dispatch","onSelectElement","selectElement","e","key","onClick","bind","Table","getData","rowsAmount","props","onCurPageNullify","onSelectedElementNullify","onSearchDataNullify","onGetTableData","final","tableData","filter","values","includes","tableState","onChangeFilteredData","onSetMaxPages","changeSearchInput","onChangeSearchInput","target","nullifySearchValue","addElementFormSubmit","preventDefault","onFormErorrInputNullify","checkFormInputValue","onAddFormInput","onFormErorrInput","form","validateEmail","validatePhone","changeFormInputValue","inputName","inputValue","onChangeFormInput","sortColumn","newData","slice","onColumnFilterStateToggle","sort","a","b","onUpdateTableData","test","String","toLowerCase","maxItems","this","i","push","getTableValues","onChange","src","clearIcon","alt","searchIcon","readOnly","onDecrementPage","disabled","onIncrementPage","random","htmlFor","some","el","onLoaderActivate","onLoaderDeactivate","fetch","tableDataUrl","method","headers","then","response","json","getTableData","dataName","setMaxPages","dataType","store","createStore","reducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","hashHistory","createBrowserHistory","history","syncHistoryWithStore","ReactDOM","render","path","component","from","document","getElementById"],"mappings":"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","file":"static/js/main.5ded415a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.5d8fa210.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.c4127766.svg\";","const initialState = {\r\n  maxPages:0,\r\n  curPage:0,\r\n  selectedElementId: -1,\r\n  searchValue:\"\",\r\n  loaderActive:false,\r\n  formErrorInput:false,\r\n  columnFilterState:{\r\n    id:'decrease',\r\n    firstName:'decrease',\r\n    lastName:'decrease',\r\n    email:'decrease',\r\n    phone:'decrease',\r\n  },\r\n  dataForm:{\r\n    id:'',\r\n    firstName:'',\r\n    lastName:'',\r\n    email:'',\r\n    phone:''\r\n  },\r\n  bufDataObj:{\r\n    id:'',\r\n    firstName:'',\r\n    lastName:'',\r\n    email:'',\r\n    phone:'',\r\n    address:{\r\n      streetAddress:\"\",\r\n      city:\"\",\r\n      state:\"\",\r\n      zip:\"\"\r\n    },\r\n    description:''\r\n  },\r\n  data:[],\r\n  filteredData:[],\r\n  selectedElement:{}\r\n};\r\n\r\n\r\nexport default function userState(state = initialState, action){\r\n  \r\n    if (action.type === 'CHANGE_SEARCH_INPUT'){\r\n        state.searchValue = action.payload;\r\n        return {\r\n          ...state\r\n        };\r\n    }\r\n    if (action.type === 'NULLIFY_SEARCH_DATA'){\r\n      state.filteredData = [];\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'CHANGE_FILTERED_DATA'){\r\n      state.filteredData = action.payload;\r\n      return {\r\n        ...state\r\n      };\r\n    }   \r\n    if (action.type === 'SELECT_ELEMENT'){\r\n        state.selectedElement = action.payload.item;\r\n        state.selectedElementId = action.payload.id;\r\n        return {\r\n          ...state\r\n        };\r\n    }\r\n    if (action.type === 'SET_TABLE_DATA'){\r\n      state.data = action.payload;\r\n      state.data = Object.assign([], state.data, [...state.data]);\r\n\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'LOADER_ACTIVATE'){\r\n      state.loaderActive = true;\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'LOADER_DEACTIVATE'){\r\n      state.loaderActive = false;\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'SET_MAX_PAGES'){\r\n      const data = action.payload\r\n      state.maxPages = Math.floor(state[data].length % 50 === 0 ? state[data].length / 50 - 1 : state[data].length / 50)\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'INCREMENT_PAGE'){\r\n      state.curPage += 1;\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'DECREMENT_PAGE'){\r\n      state.curPage -= 1;\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'NULLIFY_CURRENT_PAGE'){\r\n      state.curPage = 0;\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'NULLIFY_SELECTED_ELEMENT'){\r\n      state.selectedElementId = -1;\r\n      state.selectedElement = {};\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'COLUMN_FILTER_STATE_TOGGLE'){\r\n      const columnName = action.payload;\r\n      const initalColumnState = state.columnFilterState[columnName]\r\n\r\n      Object.keys(state.columnFilterState).map(function(objectKey) {\r\n        return state.columnFilterState[objectKey] = 'decrease';\r\n      });\r\n\r\n      state.columnFilterState[columnName] = (initalColumnState === 'decrease' ? ('increase') : ('decrease'))\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'UPDATE_TABLE_DATA'){\r\n      state.data = action.payload;\r\n      state.data = Object.assign([], state.data, [...state.data]);\r\n\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'CHANGE_FORM_INPUT'){\r\n      state.dataForm[action.payload.name] = action.payload.value;\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'FORM_ERROR_INPUT'){\r\n      state.formErrorInput = true;\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'FORM_ERROR_INPUT_NULLIFY'){\r\n      state.formErrorInput = false;\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    \r\n    if (action.type === 'ADD_FORM_INPUT'){\r\n\r\n      state.data.unshift(Object.assign(state.bufDataObj, state.dataForm));\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    \r\n    return state;\r\n}","import {combineReducers} from 'redux'\r\nimport { routerReducer } from 'react-router-redux';\r\n\r\nimport table from './table'\r\n\r\n\r\nexport default combineReducers({\r\n    routing: routerReducer,\r\n    table\r\n})","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport './css/style.css';\nimport './css/global.css';\nimport './css/normalize.css';\nimport './fonts/stylesheet.css';\nimport './css/media.css';\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Link to=\"/table\" className=\"f-medium semi link-anim nav-el\">Таблица</Link>\n    )\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nfunction TableRow({data, index, selectedId, onSelectElement}) {\n    \n    function selectElement(item, e) {\n        onSelectElement(item, index)\n    }\n\n    return (\n        <tr className={\"table-row \" + (index === selectedId ? ('selected') : (''))}>\n            {Object.keys(data).map((item, index) => {\n                if (item !== 'address' && item !== 'description')\n                    return <td className={\"td-\" + item} key={index} onClick={selectElement.bind(this, data)}>{data[item]}</td>\n                return null\n            })}  \n        </tr>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) =>{\n    return {\n        data: ownProps.data,\n        rowIndex: ownProps.index,\n        selectedId: state.table.selectedElementId\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        onSelectElement: (item, id)=>{\n            dispatch({type : 'SELECT_ELEMENT', payload:{'item':item, 'id':id}})\n        }\n    }\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(TableRow);\n\n","import { connect } from 'react-redux'\r\nimport './loader.css'\r\n\r\nimport React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <div className=\"lds-ring\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = () =>{\r\n    return {\r\n      \r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Loader);\r\n  ","const tableDataUrl =  'http://www.filltext.com'\r\nconst tableDataInitialOptions = '&id={number|1000}&firstName={firstName}&delay=1&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}'\r\n\r\nfunction getDataFetchSucces(tableData){\r\n    return{\r\n        type:'SET_TABLE_DATA',\r\n        payload:tableData\r\n    }\r\n}\r\n\r\nexport const getTableData = (rowsAmount) => (dispatch) => {\r\n    return fetch(tableDataUrl + '/?rows=' + rowsAmount + tableDataInitialOptions,{\r\n        method: 'GET',\r\n        headers:{\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })  \r\n    .then(response => response.json())\r\n    .then(data => dispatch(getDataFetchSucces(data)))\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport TableRow from './TableRow';\r\nimport Loader from './../Loader/Loader';\r\nimport { connect } from 'react-redux';\r\nimport {getTableData} from '../../actions/serverConnections';\r\nimport {loaderActivate, loaderDeactivate, setMaxPages} from '../../actions/application';\r\nimport clearIcon from '../../img/close.svg';\r\nimport searchIcon from '../../img/search.svg';\r\nimport './table.css';\r\n\r\n\r\nclass Table extends Component{\r\n    getData = (rowsAmount) => {\r\n      this.props.onCurPageNullify();\r\n      this.props.onSelectedElementNullify();\r\n      this.props.onSearchDataNullify();\r\n      this.props.onGetTableData(rowsAmount);\r\n    }\r\n\r\n    searchValue = () =>{\r\n      const final = this.props.tableData.filter((item)=>{\r\n          return Object.values(item).includes(this.props.tableState.searchValue);\r\n      })\r\n      this.props.onChangeFilteredData(final);\r\n      this.props.onSetMaxPages('filteredData');\r\n      this.props.onCurPageNullify();\r\n    }\r\n\r\n    changeSearchInput = (e) =>{\r\n      this.props.onChangeSearchInput(e.target.value);\r\n    }\r\n\r\n    nullifySearchValue = () =>{\r\n      this.props.onSetMaxPages('filteredData');\r\n      this.props.onCurPageNullify();\r\n      this.props.onSearchDataNullify();\r\n    }\r\n\r\n    validateEmail(email) {\r\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    validatePhone(phone) {\r\n      const re = /\\(?([0-9]{3})\\)?([ .-]?)([0-9]{3})\\2([0-9]{4})/;\r\n      return re.test(String(phone).toLowerCase());\r\n    }\r\n\r\n    addElementFormSubmit = (e) =>{\r\n      e.preventDefault();\r\n\r\n      this.props.onFormErorrInputNullify();\r\n\r\n      if (this.checkFormInputValue(this.props.tableState.dataForm)){\r\n        this.props.onAddFormInput();\r\n      }\r\n      else {\r\n        this.props.onFormErorrInput();\r\n      }\r\n    }\r\n\r\n    checkFormInputValue = (form) => {\r\n      if (this.validateEmail(form.email) && this.validatePhone(form.phone)){\r\n        return true;\r\n      }\r\n      else return false;\r\n    }\r\n\r\n    changeFormInputValue = (e) => {\r\n      const inputName = e.target.name;\r\n      const inputValue = e.target.value;\r\n      \r\n      this.props.onChangeFormInput(inputValue, inputName);\r\n    }\r\n\r\n    sortColumn = (columnName) => {\r\n      let newData = this.props.tableData.slice();\r\n      this.props.onColumnFilterStateToggle(columnName);\r\n      this.props.onSelectedElementNullify();\r\n      \r\n      if (this.props.columnFilterState[columnName] === 'increase'){\r\n        newData.sort((a, b) => {\r\n          if (a[columnName] < b[columnName]) {\r\n            return -1;\r\n          }\r\n          if (a[columnName] > b[columnName]) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n      else{\r\n        newData.sort((a, b) => {\r\n          if (b[columnName] < a[columnName]) {\r\n            return -1;\r\n          }\r\n          if (b[columnName] > a[columnName]) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n      this.props.onUpdateTableData(newData);\r\n    }\r\n\r\n    getTableValues(){\r\n      let maxItems = 50;\r\n      const tableState = this.props.tableState;\r\n      let final = [];\r\n      let tableData = [];\r\n\r\n      if (this.props.tableState.filteredData.length !== 0){\r\n        tableData = this.props.tableState.filteredData;\r\n      }\r\n      else{\r\n        tableData = this.props.tableData;\r\n      }\r\n\r\n      \r\n      if (tableData.length - tableState.curPage * maxItems < maxItems) maxItems = tableData.length - tableState.curPage * maxItems;\r\n\r\n      for (let i = tableState.curPage * 50; i < tableState.curPage * 50 + maxItems; i++){\r\n        final.push(<TableRow data = {tableData[i]} key = {i} index = {i}/>);\r\n      }\r\n\r\n      return final;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"main-container\">\r\n            {Object.keys(this.props.tableData).length !== 0 ? (\r\n              <table className=\"users-table\">\r\n              <caption>Таблица Пользователей</caption>\r\n      \r\n              <thead>\r\n                <tr>\r\n                  <th \r\n                    className={\"th-id users-table__column-name \" + this.props.columnFilterState.id || ''}\r\n                    onClick={this.sortColumn.bind(this, 'id')}\r\n                  >id</th>\r\n                  <th\r\n                    className={\"th-firstName users-table__column-name \" + this.props.columnFilterState.firstName || ''} \r\n                    onClick={this.sortColumn.bind(this, 'firstName')}\r\n                  >firstName</th>\r\n                  <th\r\n                    className={\"th-lastName users-table__column-name \" + this.props.columnFilterState.lastName || ''}\r\n                    onClick={this.sortColumn.bind(this, 'lastName')}\r\n                  >lastName</th>\r\n                  <th \r\n                    className={\"th-email users-table__column-name \" + this.props.columnFilterState.email || ''}\r\n                    onClick={this.sortColumn.bind(this, 'email')}\r\n                  >email</th>\r\n                  <th\r\n                    className={\"th-phone users-table__column-name \" + this.props.columnFilterState.phone || ''}\r\n                    onClick={this.sortColumn.bind(this, 'phone')}\r\n                  >phone</th>\r\n                </tr>\r\n              </thead>\r\n      \r\n              <tbody>\r\n              {\r\n                this.getTableValues()\r\n              }\r\n              </tbody>\r\n              \r\n            </table>\r\n            \r\n            ):('')}\r\n            \r\n          \r\n          <div className=\"side-block\">\r\n            {Object.keys(this.props.tableData).length !== 0 ? (\r\n              <div className=\"search-block\">\r\n                <input className=\"underline\" type=\"text\" onChange={this.changeSearchInput.bind(this)} value={this.props.tableState.searchValue}/>\r\n                <button className=\"close-btn\" onClick={this.nullifySearchValue}>\r\n                  <span>Убрать фильтр</span>\r\n                  <img src={clearIcon} alt=\"\"/>\r\n                </button>\r\n                <button className=\"search-btn\" onClick={this.searchValue}>\r\n                  <span>Найти</span>\r\n                  <img src={searchIcon} alt=\"\"/>\r\n                </button>\r\n              </div>\r\n            ):('')}\r\n            {Object.keys(this.props.selectedElement).length !== 0 ? (\r\n              <div className=\"user-block\">\r\n                Выбран пользователь <b className=\"user-block__user-name\">{this.props.selectedElement['firstName'] + ' ' + this.props.selectedElement['lastName']}</b>\r\n      \r\n                <p>Описание:</p>\r\n                <textarea className=\"user-block__description\" value={this.props.selectedElement['description']} readOnly></textarea>\r\n      \r\n                <div className=\"address\">\r\n                  <p>Адрес проживания: <b className=\"user-block__address\">{this.props.selectedElement['address']['streetAddress']}</b></p>\r\n                  <p>Город: <b className=\"user-block__city\"></b>{this.props.selectedElement['address']['city']}</p>\r\n                  <p>Провинция/штат: <b className=\"user-block__state\"></b>{this.props.selectedElement['address']['city']}</p>\r\n                  <p>Индекс: <b className=\"user-block__zip\"></b>{this.props.selectedElement['address']['zip']}</p>\r\n                </div>\r\n                \r\n              </div>\r\n            ):('')}\r\n            \r\n            \r\n    \r\n            <div className=\"change-page-block\">\r\n              <div className=\"change-page-block__controls\">\r\n                <button \r\n                  className=\"change-page-block__controls__button\" \r\n                  onClick={this.props.onDecrementPage}\r\n                  disabled={this.props.tableState.curPage > 0 ? (false):(true)}\r\n                >{\"<\"}</button>\r\n                <button\r\n                  className=\"change-page-block__controls__button\" \r\n                  onClick={this.props.onIncrementPage}\r\n                  disabled={this.props.tableState.curPage < this.props.tableState.maxPages ? (false):(true)}\r\n                >{\">\"}</button>\r\n              </div>\r\n              <span>{this.props.tableState.curPage}/{this.props.tableState.maxPages}</span>\r\n            </div>\r\n    \r\n            <div className=\"data-choose\">\r\n              <div className=\"data-choose__buttons\">\r\n                <button className=\"data-choose__button\" onClick={() => this.getData(32)}>Get small data</button>\r\n                <button className=\"data-choose__button\" onClick={() => this.getData(1000)}>Get big data</button>\r\n                <button className=\"data-choose__button\" onClick={() => this.getData(Math.floor(Math.random() * Math.floor(1000)))}>Get random data</button>\r\n              </div>\r\n            \r\n            </div>\r\n            {this.props.tableState.loaderActive ? (<Loader></Loader>):('')}\r\n\r\n            {Object.keys(this.props.tableData).length !== 0 ? (\r\n\r\n            <form className=\"table-form\">\r\n              <div className=\"input-field\">\r\n                <label className=\"input-field__label\" htmlFor=\"idInput\">id</label>\r\n                <input className=\"input-field__input underline\" id=\"idInput\" name=\"id\" type=\"number\" onChange={this.changeFormInputValue}/>\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label className=\"input-field__label\" htmlFor=\"firstNameInput\">firstName</label>\r\n                <input className=\"input-field__input underline\" id=\"firstNameInput\" name=\"firstName\" type=\"text\" onChange={this.changeFormInputValue}/>\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label className=\"input-field__label\" htmlFor=\"lastNameInput\">lastName</label>\r\n                <input className=\"input-field__input underline\" id=\"lastNameInput\" name=\"lastName\" type=\"text\" onChange={this.changeFormInputValue}/>\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label className=\"input-field__label\" htmlFor=\"emailInput\">email</label>\r\n                <input className=\"input-field__input underline\" id=\"emailInput\" name=\"email\" type=\"email\" onChange={this.changeFormInputValue}/>\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label className=\"input-field__label\" htmlFor=\"phoneInput\">phone</label>\r\n                <input className=\"input-field__input underline\" id=\"phoneInput\" name=\"phone\" type=\"phone\" onChange={this.changeFormInputValue} />\r\n              </div>\r\n\r\n              <button type=\"submit\" className=\"form-submit-btn\" disabled={Object.values(this.props.tableState.dataForm).some(el => el === \"\")} onClick={this.addElementFormSubmit}>Добавить</button>\r\n\r\n              {this.props.tableState.formErrorInput ? (\r\n                <p className=\"form-error\">В полях ввода допущена ошибка!</p>\r\n              ) : ('')}\r\n            </form>) : ('')}\r\n          </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n    tableState:state.table,\r\n    tableData:state.table.data,\r\n    columnFilterState:state.table.columnFilterState,\r\n    selectedElement:state.table.selectedElement\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    onLoaderActivate: () => {\r\n        dispatch({type : 'LOADER_ACTIVATE', payload:null})\r\n    },\r\n    onLoaderDeactivate: () => {\r\n        dispatch({type : 'LOADER_DEACTIVATE', payload:null})\r\n    },\r\n    onGetTableData: (rowsAmount) => {\r\n      dispatch(loaderActivate())\r\n      dispatch(getTableData(rowsAmount))\r\n      .then((response) => dispatch(setMaxPages()))\r\n      .then((response) => dispatch(loaderDeactivate()))\r\n    },\r\n    onUpdateTableData: (data) => {\r\n        dispatch({type : 'UPDATE_TABLE_DATA', payload:data})\r\n    },\r\n    onIncrementPage: () => {\r\n        dispatch({type : 'INCREMENT_PAGE', payload:null})\r\n    },\r\n    onDecrementPage: () => {\r\n        dispatch({type : 'DECREMENT_PAGE', payload:null})\r\n    },\r\n    onColumnFilterStateToggle: (columnName) => {\r\n        dispatch({type : 'COLUMN_FILTER_STATE_TOGGLE', payload:columnName})\r\n    },\r\n    onSetMaxPages: (dataType) => {\r\n      dispatch({type : 'SET_MAX_PAGES', payload:dataType})\r\n    },\r\n    onCurPageNullify: () => {\r\n      dispatch({type : 'NULLIFY_CURRENT_PAGE', payload:null})\r\n    },\r\n    onSelectedElementNullify: () => {\r\n      dispatch({type : 'NULLIFY_SELECTED_ELEMENT', payload:null})\r\n    },\r\n    onChangeSearchInput: (value) => {\r\n      dispatch({type : 'CHANGE_SEARCH_INPUT', payload:value})\r\n    },\r\n    onSearchDataNullify: () => {\r\n      dispatch({type : 'NULLIFY_SEARCH_DATA', payload:null})\r\n    },\r\n    onChangeFilteredData: (value) => {\r\n      dispatch({type : 'CHANGE_FILTERED_DATA', payload:value})\r\n    },\r\n    onChangeFormInput: (value, inputName) => {\r\n      dispatch({type : 'CHANGE_FORM_INPUT', payload:{\"value\":value, \"name\":inputName}})\r\n    },\r\n    onFormErorrInput: () => {\r\n      dispatch({type : 'FORM_ERROR_INPUT', payload:null})\r\n    },\r\n    onFormErorrInputNullify: () => {\r\n      dispatch({type : 'FORM_ERROR_INPUT_NULLIFY', payload:null})\r\n    },\r\n    onAddFormInput:() => {\r\n      dispatch({type : 'ADD_FORM_INPUT', payload:null})\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\r\n","export const loaderActivate = () => (dispatch) => {\r\n    return dispatch({\r\n        type:'LOADER_ACTIVATE'\r\n    })\r\n}\r\n\r\nexport const loaderDeactivate = () => (dispatch) => {\r\n    return dispatch({\r\n        type:'LOADER_DEACTIVATE'\r\n    })\r\n}\r\n\r\nexport const setMaxPages = (dataName = 'data') => (dispatch) => {\r\n    return dispatch({\r\n        type:'SET_MAX_PAGES',\r\n        payload: dataName\r\n    })\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport reducer from './reducers/reducer'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport {createBrowserHistory} from 'history'\nimport {\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\"\nimport thunk from 'redux-thunk';\nimport App from './App'\nimport Table from './components/Table/Table'\nimport { syncHistoryWithStore } from 'react-router-redux';\n\n\nconst store = createStore(\n  reducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n  ));   // reducer\nconst hashHistory = createBrowserHistory();\nconst history = syncHistoryWithStore(hashHistory, store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>  \n      <Route path=\"/\" component={App}/>\n\n      <Switch>\n          <Route path=\"/table\" component={Table}/>\n          <Redirect from=\"*\" to=\"/\"/>\n      </Switch>\n    </Router>\n  </Provider>,\n\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}