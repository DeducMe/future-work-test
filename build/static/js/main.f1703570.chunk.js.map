{"version":3,"sources":["img/close.svg","img/search.svg","reducers/table.js","reducers/reducer.js","App.js","components/Table/TableRow.js","components/Loader/Loader.js","actions/serverConnections.js","components/Table/Table.js","actions/application.js","index.js"],"names":["module","exports","initialState","maxPages","curPage","selectedElementId","searchValue","loaderActive","columnFilterState","id","firstName","lastName","email","phone","data","filteredData","selectedElement","combineReducers","routing","routerReducer","table","state","action","type","payload","item","Object","assign","Math","floor","length","columnName","initalColumnState","keys","map","objectKey","App","to","className","Component","connect","ownProps","rowIndex","index","selectedId","dispatch","onSelectElement","selectElement","e","key","onClick","bind","Table","getData","rowsAmount","props","onCurPageNullify","onSelectedElementNullify","onGetTableData","final","tableData","filter","console","log","values","includes","tableState","onChangeFilteredData","changeSearchInput","onChangeSearchInput","target","value","nullifySearchValue","onSearchDataNullify","sortColumn","newData","slice","onColumnFilterStateToggle","sort","a","b","onUpdateTableData","maxItems","this","i","push","getTableValues","onChange","src","clearIcon","alt","searchIcon","readOnly","onDecrementPage","disabled","onIncrementPage","random","htmlFor","name","onLoaderActivate","onLoaderDeactivate","fetch","tableDataUrl","method","headers","then","response","json","getTableData","onSetMaxPages","store","createStore","reducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","hashHistory","createBrowserHistory","history","syncHistoryWithStore","ReactDOM","render","path","component","from","document","getElementById"],"mappings":"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","file":"static/js/main.f1703570.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.5d8fa210.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.c4127766.svg\";","const initialState = {\r\n  maxPages:0,\r\n  curPage:0,\r\n  selectedElementId: -1,\r\n  searchValue:\"\",\r\n  loaderActive:false,\r\n  columnFilterState:{\r\n    id:'decrease',\r\n    firstName:'decrease',\r\n    lastName:'decrease',\r\n    email:'decrease',\r\n    phone:'decrease',\r\n  },\r\n  data:[],\r\n  filteredData:[],\r\n  selectedElement:{}\r\n};\r\n\r\n\r\nexport default function userState(state = initialState, action){\r\n  \r\n    if (action.type === 'CHANGE_SEARCH_INPUT'){\r\n        state.searchValue = action.payload;\r\n        return {\r\n          ...state\r\n        };\r\n    }\r\n    if (action.type === 'NULLIFY_SEARCH_DATA'){\r\n      state.filteredData = [];\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'CHANGE_FILTERED_DATA'){\r\n      state.filteredData = action.payload;\r\n      return {\r\n        ...state\r\n      };\r\n    }   \r\n    if (action.type === 'SELECT_ELEMENT'){\r\n        state.selectedElement = action.payload.item;\r\n        state.selectedElementId = action.payload.id;\r\n        return {\r\n          ...state\r\n        };\r\n    }\r\n    if (action.type === 'SET_TABLE_DATA'){\r\n      state.data = action.payload;\r\n      state.data = Object.assign([], state.data, [...state.data]);\r\n\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'LOADER_ACTIVATE'){\r\n      state.loaderActive = true;\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'LOADER_DEACTIVATE'){\r\n      state.loaderActive = false;\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'SET_MAX_PAGES'){\r\n      state.maxPages = Math.floor(state.data.length % 50 === 0 ? state.data.length / 50 - 1 : state.data.length / 50)\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'INCREMENT_PAGE'){\r\n      state.curPage += 1;\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'DECREMENT_PAGE'){\r\n      state.curPage -= 1;\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'NULLIFY_CURRENT_PAGE'){\r\n      state.curPage = 0;\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'NULLIFY_SELECTED_ELEMENT'){\r\n      state.selectedElementId = -1;\r\n      state.selectedElement = {};\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'COLUMN_FILTER_STATE_TOGGLE'){\r\n      const columnName = action.payload;\r\n      const initalColumnState = state.columnFilterState[columnName]\r\n\r\n      Object.keys(state.columnFilterState).map(function(objectKey) {\r\n        state.columnFilterState[objectKey] = 'decrease';\r\n      });\r\n\r\n      state.columnFilterState[columnName] = (initalColumnState === 'decrease' ? ('increase') : ('decrease'))\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    if (action.type === 'UPDATE_TABLE_DATA'){\r\n      state.data = action.payload;\r\n      state.data = Object.assign([], state.data, [...state.data]);\r\n\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    \r\n    return state;\r\n}","import {combineReducers} from 'redux'\r\nimport { routerReducer } from 'react-router-redux';\r\n\r\nimport table from './table'\r\n\r\n\r\nexport default combineReducers({\r\n    routing: routerReducer,\r\n    table\r\n})","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport './css/style.css';\nimport './css/global.css';\nimport './css/normalize.css';\nimport './fonts/stylesheet.css';\nimport './css/media.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Link to=\"/table\" className=\"f-medium semi link-anim nav-el\">Таблица</Link>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './table.css'\n\nfunction TableRow({data, index, selectedId, onSelectElement}) {\n    \n    function selectElement(item, e) {\n        onSelectElement(item, index)\n    }\n\n    return (\n        <tr className={\"table-row \" + (index === selectedId ? ('selected') : (''))}>\n            {Object.keys(data).map((item, index) => {\n                if (item !== 'address' && item !== 'description')\n                    return <td className={\"td-\" + item} key={index} onClick={selectElement.bind(this, data)}>{data[item]}</td>\n            })}  \n        </tr>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) =>{\n    return {\n        data: ownProps.data,\n        rowIndex: ownProps.index,\n        selectedId: state.table.selectedElementId\n    }\n}\n  \nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        onSelectElement: (item, id)=>{\n            dispatch({type : 'SELECT_ELEMENT', payload:{'item':item, 'id':id}})\n        }\n    }\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(TableRow);\n\n","import { connect } from 'react-redux'\r\nimport './loader.css'\r\n\r\nimport React, { Component } from 'react'\r\n\r\nconst Loader = ({}) => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <div className=\"lds-ring\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = () =>{\r\n    return {\r\n      \r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Loader);\r\n  ","const tableDataUrl =  'http://www.filltext.com'\r\nconst tableDataInitialOptions = '&id={number|1000}&firstName={firstName}&delay=1&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}'\r\n\r\nfunction getDataFetchSucces(tableData){\r\n    return{\r\n        type:'SET_TABLE_DATA',\r\n        payload:tableData\r\n    }\r\n}\r\n\r\nexport const getTableData = (rowsAmount) => (dispatch) => {\r\n    return fetch(tableDataUrl + '/?rows=' + rowsAmount + tableDataInitialOptions,{\r\n        method: 'GET',\r\n        headers:{\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })  \r\n    .then(response => {\r\n        let a = response.json()\r\n        console.log(a)\r\n        return a\r\n    })\r\n    .then(data => {\r\n        console.log(data)\r\n        return dispatch(getDataFetchSucces(data))\r\n    })\r\n}\r\n\r\n","import React, {useState, useEffect, Component} from 'react';\r\nimport TableRow from './TableRow'\r\nimport Loader from './../Loader/Loader'\r\nimport { connect } from 'react-redux'\r\nimport {getTableData} from '../../actions/serverConnections'\r\nimport {loaderActivate, loaderDeactivate, setMaxPages} from '../../actions/application'\r\nimport clearIcon from '../../img/close.svg'\r\nimport searchIcon from '../../img/search.svg'\r\n\r\n\r\nclass Table extends Component{\r\n    getData = (rowsAmount) => {\r\n      this.props.onCurPageNullify()\r\n      this.props.onSelectedElementNullify()\r\n\r\n      this.props.onGetTableData(rowsAmount)\r\n    }\r\n\r\n    searchValue = () =>{\r\n      const final = this.props.tableData.filter((item)=>{\r\n          console.log()\r\n          return Object.values(item).includes(this.props.tableState.searchValue);\r\n      })\r\n      this.props.onChangeFilteredData(final)\r\n    }\r\n\r\n    changeSearchInput = (e) =>{\r\n      this.props.onChangeSearchInput(e.target.value)\r\n    }\r\n\r\n    nullifySearchValue = () =>{\r\n      this.props.onSearchDataNullify()\r\n    }\r\n\r\n    sortColumn = (columnName) => {\r\n      let newData = this.props.tableData.slice()\r\n      this.props.onColumnFilterStateToggle(columnName)\r\n      this.props.onSelectedElementNullify()\r\n      \r\n      if (this.props.columnFilterState[columnName] === 'increase'){\r\n        newData.sort((a, b) => {\r\n          if (a[columnName] < b[columnName]) {\r\n            return -1;\r\n          }\r\n          if (a[columnName] > b[columnName]) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n      else{\r\n        newData.sort((a, b) => {\r\n          if (b[columnName] < a[columnName]) {\r\n            return -1;\r\n          }\r\n          if (b[columnName] > a[columnName]) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n      this.props.onUpdateTableData(newData)\r\n    }\r\n\r\n    getTableValues(){\r\n      let maxItems = 50;\r\n      const tableState = this.props.tableState;\r\n      let final = [];\r\n      let tableData = []\r\n\r\n      if (this.props.tableState.filteredData.length !== 0){\r\n        tableData = this.props.tableState.filteredData;\r\n      }\r\n      else{\r\n        tableData = this.props.tableData;\r\n      }\r\n\r\n      \r\n      if (tableData.length - tableState.curPage * maxItems < maxItems) maxItems = tableData.length - tableState.curPage * maxItems;\r\n\r\n      for (let i = tableState.curPage * 50; i < tableState.curPage * 50 + maxItems; i++){\r\n        final.push(<TableRow data = {tableData[i]} key = {i} index = {i}/>)\r\n      }\r\n\r\n      return final\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"main-container\">\r\n            {Object.keys(this.props.tableData).length !== 0 ? (\r\n              <table className=\"users-table\">\r\n              <caption>Таблица Пользователей</caption>\r\n      \r\n              <thead>\r\n                <tr>\r\n                  <th \r\n                    className={\"th-id users-table__column-name \" + this.props.columnFilterState.id || ''}\r\n                    onClick={this.sortColumn.bind(this, 'id')}\r\n                  >id</th>\r\n                  <th\r\n                    className={\"th-firstName users-table__column-name \" + this.props.columnFilterState.firstName || ''} \r\n                    onClick={this.sortColumn.bind(this, 'firstName')}\r\n                  >firstName</th>\r\n                  <th\r\n                    className={\"th-lastName users-table__column-name \" + this.props.columnFilterState.lastName || ''}\r\n                    onClick={this.sortColumn.bind(this, 'lastName')}\r\n                  >lastName</th>\r\n                  <th \r\n                    className={\"th-email users-table__column-name \" + this.props.columnFilterState.email || ''}\r\n                    onClick={this.sortColumn.bind(this, 'email')}\r\n                  >email</th>\r\n                  <th\r\n                    className={\"th-phone users-table__column-name \" + this.props.columnFilterState.phone || ''}\r\n                    onClick={this.sortColumn.bind(this, 'phone')}\r\n                  >phone</th>\r\n                </tr>\r\n              </thead>\r\n      \r\n              <tbody>\r\n              {\r\n                this.getTableValues()\r\n              }\r\n              </tbody>\r\n              \r\n            </table>\r\n            \r\n            ):('')}\r\n            \r\n          \r\n          <div className=\"side-block\">\r\n            {Object.keys(this.props.tableData).length !== 0 ? (\r\n              <div className=\"search-block\">\r\n                <input className=\"underline\" type=\"text\" onChange={this.changeSearchInput.bind(this)} value={this.props.tableState.searchValue}/>\r\n                <button className=\"close-btn\" onClick={this.nullifySearchValue}>\r\n                  <span>Убрать фильтр</span>\r\n                  <img src={clearIcon} alt=\"\"/>\r\n                </button>\r\n                <button className=\"search-btn\" onClick={this.searchValue}>\r\n                  <span>Найти</span>\r\n                  <img src={searchIcon} alt=\"\"/>\r\n                </button>\r\n              </div>\r\n            ):('')}\r\n            {Object.keys(this.props.selectedElement).length !== 0 ? (\r\n              <div className=\"user-block\">\r\n                Выбран пользователь <b className=\"user-block__user-name\">{this.props.selectedElement['firstName'] + ' ' + this.props.selectedElement['lastName']}</b>\r\n      \r\n                <p>Описание:</p>\r\n                <textarea className=\"user-block__description\" value={this.props.selectedElement['description']} readOnly></textarea>\r\n      \r\n                <div className=\"address\">\r\n                  <p>Адрес проживания: <b className=\"user-block__address\">{this.props.selectedElement['address']['streetAddress']}</b></p>\r\n                  <p>Город: <b className=\"user-block__city\"></b>{this.props.selectedElement['address']['city']}</p>\r\n                  <p>Провинция/штат: <b className=\"user-block__state\"></b>{this.props.selectedElement['address']['city']}</p>\r\n                  <p>Индекс: <b className=\"user-block__zip\"></b>{this.props.selectedElement['address']['zip']}</p>\r\n                </div>\r\n                \r\n              </div>\r\n            ):('')}\r\n            \r\n            \r\n    \r\n            <div className=\"change-page-block\">\r\n              <div className=\"change-page-block__controls\">\r\n                <button \r\n                  className=\"change-page-block__controls__button\" \r\n                  onClick={this.props.onDecrementPage}\r\n                  disabled={this.props.tableState.curPage > 0 ? (false):(true)}\r\n                >{\"<\"}</button>\r\n                <button\r\n                  className=\"change-page-block__controls__button\" \r\n                  onClick={this.props.onIncrementPage}\r\n                  disabled={this.props.tableState.curPage < this.props.tableState.maxPages ? (false):(true)}\r\n                >{\">\"}</button>\r\n              </div>\r\n              <span>{this.props.tableState.curPage}/{this.props.tableState.maxPages}</span>\r\n            </div>\r\n    \r\n            <div className=\"data-choose\">\r\n              <div className=\"data-choose__buttons\">\r\n                <button className=\"data-choose__button\" onClick={() => this.getData(32)}>Get small data</button>\r\n                <button className=\"data-choose__button\" onClick={() => this.getData(1000)}>Get big data</button>\r\n                <button className=\"data-choose__button\" onClick={() => this.getData(Math.floor(Math.random() * Math.floor(1000)))}>Get random data</button>\r\n              </div>\r\n            \r\n            </div>\r\n            {this.props.tableState.loaderActive ? (<Loader></Loader>):('')}\r\n\r\n            {Object.keys(this.props.tableData).length !== 0 ? (\r\n\r\n            <form className=\"table-form\">\r\n              <div className=\"input-field\">\r\n                <label className=\"input-field__label\" htmlFor=\"idInput\">id</label>\r\n                <input className=\"input-field__input underline\" id=\"idInput\" name=\"idInput\" type=\"num\"/>\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label className=\"input-field__label\" htmlFor=\"firstNameInput\">firstName</label>\r\n                <input className=\"input-field__input underline\" id=\"firstNameInput\" name=\"firstNameInput\" type=\"text\"/>\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label className=\"input-field__label\" htmlFor=\"lastNameInput\">lastName</label>\r\n                <input className=\"input-field__input underline\" id=\"lastNameInput\" name=\"lastNameInput\" type=\"text\"/>\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label className=\"input-field__label\" htmlFor=\"emailInput\">email</label>\r\n                <input className=\"input-field__input underline\" id=\"emailInput\" name=\"emailInput\" type=\"email\"/>\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label className=\"input-field__label\" htmlFor=\"phoneInput\">phone</label>\r\n                <input className=\"input-field__input underline\" id=\"phoneInput\" name=\"phoneInput\" type=\"phone\"/>\r\n              </div>\r\n\r\n              <button type=\"submit\" className=\"form-submit-btn\">Добавить</button>\r\n            </form>) : ('')}\r\n          </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n    tableState:state.table,\r\n    tableData:state.table.data,\r\n    columnFilterState:state.table.columnFilterState,\r\n    selectedElement:state.table.selectedElement\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    onLoaderActivate: () => {\r\n        dispatch({type : 'LOADER_ACTIVATE', payload:null})\r\n    },\r\n    onLoaderDeactivate: () => {\r\n        dispatch({type : 'LOADER_DEACTIVATE', payload:null})\r\n    },\r\n    onGetTableData: (rowsAmount) => {\r\n      dispatch(loaderActivate())\r\n      dispatch(getTableData(rowsAmount))\r\n      .then((response) => dispatch(setMaxPages()))\r\n      .then((response) => dispatch(loaderDeactivate()))\r\n    },\r\n    onUpdateTableData: (data) => {\r\n        dispatch({type : 'UPDATE_TABLE_DATA', payload:data})\r\n    },\r\n    onIncrementPage: () => {\r\n        dispatch({type : 'INCREMENT_PAGE', payload:null})\r\n    },\r\n    onDecrementPage: () => {\r\n        dispatch({type : 'DECREMENT_PAGE', payload:null})\r\n    },\r\n    onColumnFilterStateToggle: (columnName) => {\r\n        dispatch({type : 'COLUMN_FILTER_STATE_TOGGLE', payload:columnName})\r\n    },\r\n    onSetMaxPages: () => {\r\n      dispatch({type : 'SET_MAX_PAGES', payload:null})\r\n    },\r\n    onCurPageNullify: () => {\r\n      dispatch({type : 'NULLIFY_CURRENT_PAGE', payload:null})\r\n    },\r\n    onSelectedElementNullify: () =>{\r\n      dispatch({type : 'NULLIFY_SELECTED_ELEMENT', payload:null})\r\n    },\r\n    onChangeSearchInput: (value) =>{\r\n      dispatch({type : 'CHANGE_SEARCH_INPUT', payload:value})\r\n    },\r\n    onSearchDataNullify: () =>{\r\n      dispatch({type : 'NULLIFY_SEARCH_DATA', payload:null})\r\n    },\r\n    onChangeFilteredData: (value) => {\r\n      dispatch({type : 'CHANGE_FILTERED_DATA', payload:value})\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\r\n","export const loaderActivate = () => (dispatch) => {\r\n    return dispatch({\r\n        type:'LOADER_ACTIVATE'\r\n    })\r\n}\r\n\r\nexport const loaderDeactivate = () => (dispatch) => {\r\n    return dispatch({\r\n        type:'LOADER_DEACTIVATE'\r\n    })\r\n}\r\n\r\nexport const setMaxPages = () => (dispatch) => {\r\n    return dispatch({\r\n        type:'SET_MAX_PAGES'\r\n    })\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport reducer from './reducers/reducer'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport {createBrowserHistory} from 'history'\nimport {\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\"\nimport thunk from 'redux-thunk';\nimport App from './App'\nimport Table from './components/Table/Table'\nimport { syncHistoryWithStore } from 'react-router-redux';\n\n\nconst store = createStore(\n  reducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n  ));   // reducer\nconst hashHistory = createBrowserHistory();\nconst history = syncHistoryWithStore(hashHistory, store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>  \n      <Route path=\"/\" component={App}/>\n\n      <Switch>\n          <Route path=\"/table\" component={Table}/>\n          <Redirect from=\"*\" to=\"/\"/>\n      </Switch>\n    </Router>\n  </Provider>,\n\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}